version: '3'

services:
  # consul:
  #   command: -server -bootstrap -rejoin
  #   hostname: consul-server
  #   image: progrium/consul:latest
  #   networks:
  #     - vrddt_droplets_net
  #   ports:
  #     - "8300:8300"
  #     - "8400:8400"
  #     - "8500:8500"
  #     - "8600:53/udp"

  mongo:
    environment:
      MONGO_INITDB_DATABASE: vrddt
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_ROOT_USERNAME: admin
    hostname: mongodb-server
    image: mongo
    networks:
      - vrddt_droplets_net
    ports:
      - "27017:27017"
    restart: always
    volumes:
      - ./config/mongo/001_users.js:/docker-entrypoint-initdb.d/001_users.js:ro
      - mongodb:/data/db
      - mongodb_config:/data/configdb

  mongo-express:
    environment:
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
    hostname: mongo-express
    image: mongo-express
    networks:
      - vrddt_droplets_net
    ports:
      - "8081:8081"
    restart: always

  rabbitmq:
    environment:
      RABBITMQ_DEFAULT_PASS: password
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_VHOST: /
      RABBITMQ_ERLANG_COOKIE: mycookie
    hostname: rabbitmq-server
    image: rabbitmq:management
    networks:
      - vrddt_droplets_net
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq:/var/lib/rabbitmq
      # - rabbitmq_config:/etc/rabbitmq/rabbitmq.config:ro

  # vrddt-admin:
  #   entrypoint: dockerize -timeout 30s -wait tcp://mongo:27017 -wait tcp://rabbitmq:5672 /app/vrddt-admin --config /app/config/config.admin.toml
  #   hostname: vrddt-admin
  #   image: johnwyles/vrddt-admin:${VRDDT_VERSION}
  #   links:
  #     - mongo
  #     - rabbitmq
  #   networks:
  #     - vrddt_droplets_net

  vrddt-api:
    entrypoint: dockerize -timeout 30s -wait tcp://mongo:27017 -wait tcp://rabbitmq:5672 /app/vrddt-api --config /app/config/config.api.toml
    hostname: vrddt-api
    image: johnwyles/vrddt-api:${VRDDT_VERSION}
    links:
      - mongo
      - rabbitmq
    networks:
      - vrddt_droplets_net
    ports:
      - "9090:9090"

  # vrddt-cli:
  #   entrypoint: dockerize -timeout 30s -wait tcp://vrddt-api:9090 /app/vrddt-cli --config /app/config/config.cli.toml
  #   hostname: vrddt-cli
  #   image: johnwyles/vrddt-cli:${VRDDT_VERSION}
  #   links:
  #     - vrddt-api
  #   networks:
  #     - vrddt_droplets_net

  vrddt-web:
    entrypoint: dockerize -timeout 30s -wait tcp://vrddt-api:9090 /app/vrddt-web --config /app/config/config.web.toml
    hostname: vrddt-api
    image: johnwyles/vrddt-web:${VRDDT_VERSION}
    links:
      - mongo
      - rabbitmq
      - vrddt-api
    networks:
      - vrddt_droplets_net
    ports:
      - "8080:8080"

  vrddt-worker:
    entrypoint: dockerize -timeout 30s -wait tcp://mongo:27017 -wait tcp://rabbitmq:5672 /app/vrddt-worker --config /app/config/config.worker.toml processor
    hostname: vrddt-worker
    image: johnwyles/vrddt-worker:${VRDDT_VERSION}
    links:
      - mongo
      - rabbitmq
    networks:
      - vrddt_droplets_net

networks:
  vrddt_droplets_net:

volumes:
  mongodb:
  mongodb_config:
  rabbitmq:
    # driver: local
